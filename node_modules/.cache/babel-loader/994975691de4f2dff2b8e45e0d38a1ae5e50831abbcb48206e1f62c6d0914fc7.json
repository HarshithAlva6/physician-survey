{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  title: '',\n  questions: [],\n  questionId: 1\n};\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle(state, action) {\n      state.title = action.payload;\n    },\n    addQuestion(state, action) {\n      const type = action.payload;\n      state.questions.push({\n        id: state.questionId++,\n        type,\n        label: '',\n        options: type === 'multiple_choice' ? ['MCQ Option 1'] : []\n      });\n    },\n    updateQuestion(state, action) {\n      const {\n        id,\n        updates\n      } = action.payload;\n      const questionIndex = state.questions.findIndex(q => q.id === id);\n      if (questionIndex !== -1) {\n        state.questions[questionIndex] = {\n          ...state.questions[questionIndex],\n          ...updates\n        };\n      }\n    },\n    deleteQuestion(state, action) {\n      const id = action.payload;\n      state.questions = state.questions.filter(q => q.id !== id);\n    }\n  }\n});\nexport const {\n  setTitle,\n  addQuestion,\n  updateQuestion,\n  deleteQuestion\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","title","questions","questionId","formSlice","name","reducers","setTitle","state","action","payload","addQuestion","type","push","id","label","options","updateQuestion","updates","questionIndex","findIndex","q","deleteQuestion","filter","actions","reducer"],"sources":["C:/Spring/Aider/survey/src/redux/formSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    title: '',\r\n    questions: [],\r\n    questionId: 1\r\n};\r\n\r\nconst formSlice = createSlice({\r\n    name: 'form',\r\n    initialState,\r\n    reducers: {\r\n        setTitle(state, action) {\r\n            state.title = action.payload;\r\n        },\r\n        addQuestion(state, action) {\r\n            const type = action.payload;\r\n            state.questions.push({\r\n                id: state.questionId++,\r\n                type,\r\n                label: '',\r\n                options: type === 'multiple_choice' ? ['MCQ Option 1'] : [],\r\n            });\r\n        },\r\n        updateQuestion(state, action) {\r\n            const { id, updates } = action.payload;\r\n            const questionIndex = state.questions.findIndex((q) => q.id === id);\r\n            if (questionIndex !== -1) {\r\n                state.questions[questionIndex] = {\r\n                    ...state.questions[questionIndex],\r\n                    ...updates,\r\n                };\r\n            }\r\n        },\r\n        deleteQuestion(state, action) {\r\n            const id = action.payload;\r\n            state.questions = state.questions.filter((q) => q.id !== id);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setTitle, addQuestion, updateQuestion, deleteQuestion } = formSlice.actions;\r\nexport default formSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACNC,QAAQA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACpBD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,WAAWA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMG,IAAI,GAAGH,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACN,SAAS,CAACW,IAAI,CAAC;QACjBC,EAAE,EAAEN,KAAK,CAACL,UAAU,EAAE;QACtBS,IAAI;QACJG,KAAK,EAAE,EAAE;QACTC,OAAO,EAAEJ,IAAI,KAAK,iBAAiB,GAAG,CAAC,cAAc,CAAC,GAAG;MAC7D,CAAC,CAAC;IACN,CAAC;IACDK,cAAcA,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAM;QAAEK,EAAE;QAAEI;MAAQ,CAAC,GAAGT,MAAM,CAACC,OAAO;MACtC,MAAMS,aAAa,GAAGX,KAAK,CAACN,SAAS,CAACkB,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC;MACnE,IAAIK,aAAa,KAAK,CAAC,CAAC,EAAE;QACtBX,KAAK,CAACN,SAAS,CAACiB,aAAa,CAAC,GAAG;UAC7B,GAAGX,KAAK,CAACN,SAAS,CAACiB,aAAa,CAAC;UACjC,GAAGD;QACP,CAAC;MACL;IACJ,CAAC;IACDI,cAAcA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMK,EAAE,GAAGL,MAAM,CAACC,OAAO;MACzBF,KAAK,CAACN,SAAS,GAAGM,KAAK,CAACN,SAAS,CAACqB,MAAM,CAAEF,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC;IAChE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,QAAQ;EAAEI,WAAW;EAAEM,cAAc;EAAEK;AAAe,CAAC,GAAGlB,SAAS,CAACoB,OAAO;AAC1F,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}