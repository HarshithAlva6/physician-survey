{"ast":null,"code":"var _jsxFileName = \"C:\\\\Spring\\\\Aider\\\\survey\\\\src\\\\components\\\\formBuild.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTitle, addQuestion, updateOption, deleteQuestion } from './formSlice';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormBuild = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    title,\n    questions\n  } = useSelector(state => state.form);\n  //const questionId = useRef(1);\n  //const [questions, setQuestions] = useState([]);\n  //const [title, setTitle] = useState();\n  //const addQuestion = (type) => {\n  //    const newQuestion = {\n  //        id: questionId.current++,\n  //        type: type,\n  //        label: '',\n  //        options: type === 'multiple_choice' ? ['MCQ Option 1'] : [],\n  //    };\n  //    setQuestions([...questions, newQuestion])\n  //};\n  //const updateOption = (id, updates) => {\n  //    setQuestions(questions.map(q => q.id === id ? { ...q, ...updates } : q));\n  //};\n  //const deleteQuestion = (id) => {\n  //    setQuestions(questions.filter(q => (q.id !== id)));\n  //};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Survey Form for Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Survey Title\",\n      value: title,\n      onChange: e => dispatch(setTitle(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(addQuestion('multiple_choice')),\n        children: \"Add Multiple Choice Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(addQuestion('short_answer')),\n        children: \"Add Short Answer Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(addQuestion('rating_scale')),\n        children: \"Add Rating Scale Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(q => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"What is the Question?\",\n            value: q.label,\n            onChange: e => dispatch(updateOption(q.id, {\n              ...q,\n              label: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), q.type == 'multiple_choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [q.options.map((opt, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: opt,\n              onChange: e => dispatch(updateOption(q.id, {\n                options: q.options.map((o, i) => i === index ? e.target.value : o)\n              }))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dispatch(updateOption(q.id, {\n                options: [...q.options, `MCQ Option ${q.options.length + 1}`]\n              })),\n              children: \"Add Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteQuestion(q.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log({\n          title: title,\n          questions\n        });\n        alert('Survey Saved!');\n      },\n      children: \"Save Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(FormBuild, \"795hhhNgOS37GowgNtlkr+tOqWg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FormBuild;\nexport default FormBuild;\nvar _c;\n$RefreshReg$(_c, \"FormBuild\");","map":{"version":3,"names":["React","useSelector","useDispatch","setTitle","addQuestion","updateOption","deleteQuestion","jsxDEV","_jsxDEV","FormBuild","_s","dispatch","title","questions","state","form","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","q","label","id","options","opt","index","o","i","length","console","log","alert","_c","$RefreshReg$"],"sources":["C:/Spring/Aider/survey/src/components/formBuild.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTitle, addQuestion, updateOption, deleteQuestion } from './formSlice';\r\nimport '../App.css';\r\n\r\nconst FormBuild = () => {\r\n    const dispatch = useDispatch();\r\n    const { title, questions } = useSelector((state) => state.form);\r\n    //const questionId = useRef(1);\r\n    //const [questions, setQuestions] = useState([]);\r\n    //const [title, setTitle] = useState();\r\n    //const addQuestion = (type) => {\r\n    //    const newQuestion = {\r\n    //        id: questionId.current++,\r\n    //        type: type,\r\n    //        label: '',\r\n    //        options: type === 'multiple_choice' ? ['MCQ Option 1'] : [],\r\n    //    };\r\n    //    setQuestions([...questions, newQuestion])\r\n    //};\r\n    //const updateOption = (id, updates) => {\r\n    //    setQuestions(questions.map(q => q.id === id ? { ...q, ...updates } : q));\r\n    //};\r\n    //const deleteQuestion = (id) => {\r\n    //    setQuestions(questions.filter(q => (q.id !== id)));\r\n    //};\r\n    return(\r\n        <div>\r\n            <h1>Create Survey Form for Patients</h1>\r\n        <input type=\"text\"\r\n        placeholder='Survey Title'\r\n        value={title}\r\n        onChange = {(e) => dispatch(setTitle(e.target.value))}\r\n        />\r\n        <div>\r\n            <button onClick = {() => dispatch(addQuestion('multiple_choice'))}>Add Multiple Choice Option</button>\r\n            <button onClick = {() => dispatch(addQuestion('short_answer'))}>Add Short Answer Option</button>\r\n            <button onClick = {() => dispatch(addQuestion('rating_scale'))}>Add Rating Scale Option</button>\r\n        </div>\r\n        <ul>\r\n            {questions.map((q) => {\r\n                return (\r\n                <li key={q.id}>\r\n                    <input type=\"text\"\r\n                    placeholder=\"What is the Question?\"\r\n                    value={q.label}\r\n                    onChange={(e) => dispatch(updateOption(q.id, {...q, label: e.target.value}))}\r\n                    />\r\n                    {q.type == 'multiple_choice' && (\r\n                        <div>\r\n                            {q.options.map((opt, index) => (\r\n                                <input\r\n                                    key={index}\r\n                                    type=\"text\"\r\n                                    value={opt}\r\n                                    onChange={(e) =>\r\n                                        dispatch(updateOption(q.id, {\r\n                                            options: q.options.map((o, i) =>\r\n                                            i === index ? e.target.value : o\r\n                                        )}))\r\n                                    }\r\n                                />\r\n                            ))}\r\n                            <button\r\n                                onClick={() =>\r\n                                    dispatch(updateOption(q.id, { \r\n                                        options: [...q.options, `MCQ Option ${q.options.length + 1}`]\r\n                                    }))\r\n                                }\r\n                            >\r\n                                Add Option\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                    <button onClick={() => deleteQuestion(q.id)}>Delete</button>\r\n                </li>\r\n                );\r\n            })}\r\n        </ul>\r\n        <button onClick={() => {\r\n                    console.log({ title: title, questions });\r\n                    alert('Survey Saved!');\r\n                }}>Save Survey</button>     \r\n        </div>\r\n    )\r\n}\r\nexport default FormBuild;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}